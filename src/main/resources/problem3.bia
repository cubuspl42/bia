// The prime factors of 13195 are 5, 7, 13 and 29.
// What is the largest prime factor of the number 600 851 475 143 ?

val N = 600851475143

def filterOutMultiplesOf(l : List<Number>, n : Number) {
    def isMultiple(i : Number) {
        return (i > n) and ((i % n) == 0)
    }

    def isNotMultiple(i : Number) {
        return (not (isMultiple(i)))
    }

    return filter(l, isNotMultiple)
}

// O(n * sqrt(n))
def buildPrimesBelow(n : Number) {
    def accumulate(l : List<Number>, i : Number) {
        return filterOutMultiplesOf(l, i)
    }

    return fold:L(until(2, sqrt(n)), until(1, n), accumulate)
}

// O(sqrt(N) * sqrt(sqrt(N)))
val primesBelowSqrtN = buildPrimesBelow(sqrt(N))

def isFactorOfN(m : Number) {
    return N % m == 0
}

val primeFactorsOfN = filter(primesBelowSqrtN, isFactorOfN)

return primeFactorsOfN